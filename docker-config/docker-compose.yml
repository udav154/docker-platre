version: '3'

services: 
  frontend: 
    build: 
      context: ../frontend
      dockerfile: ../docker-config/Dockerfile.dev.frontend
    ports: 
      - "3000:3000"
    volumes: 
      - ../frontend:/opt
    env_file: .env
    environment: 
      NEXT_PUBLIC_API_TOKEN: ${NEXT_PUBLIC_API_TOKEN}
      NEXT_PUBLIC_CLIENT_API_URL: ${NEXT_PUBLIC_CLIENT_API_URL}
      NEXT_PUBLIC_SERVER_API_URL: ${NEXT_PUBLIC_SERVER_API_URL}
    networks:
      - strapi
  cms: 
    container_name: cms
    tty: true
    restart: unless-stopped
    image: strapi:latest
    env_file: .env
    build: 
      context: ../cms
      dockerfile: ../docker-config/Dockerfile.dev.cms
    ports: 
      - "1337:1337"
    environment:
      APP_KEYS: ${APP_KEYS}
      JWT_SECRET: ${JWT_SECRET}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_HOST: db
      DATABASE_CLIENT: postgres
      DATABASE_PORT: 5432
      DATABASE_SSL: "false"
    volumes: 
      - ../cms/config:/opt/app/config
      - ../cms/src:/opt/app/src
      - ../cms/package.json:/opt/package.json
      - ../cms/yarn.lock:/opt/yarn.lock
      - ../cms/.env:/opt/app/.env
      - ../cms/public/uploads:/opt/app/public/uploads
    networks:
      - strapi
    depends_on:
      - db
  db:
    container_name: db
    env_file: .env
    restart: unless-stopped
    image: postgres:14.1-alpine
    platform: linux/amd64
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes: 
      - db:/var/lib/postgresql/data
    networks:
      - strapi
    
networks:
  strapi:
    driver: bridge
volumes:
  db: